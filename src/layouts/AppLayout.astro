---
import '@/styles/global.css'
import Navigation from '@/components/ui/Navigation.astro'
import Footer from '@/components/ui/Footer.astro'

export interface Props {
  title?: string
  description?: string
  includeFooter?: boolean
  navigation?: Array<{ href: string; label: string }>
}

const {
  title = 'Cetus - Single Player Minigames',
  description = 'The ultimate single-player gaming experience with futuristic minigames.',
  includeFooter = true,
  navigation,
  ...props
} = Astro.props
---

<html lang="en" class="dark">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <meta name="description" content={description} />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Orbitron:wght@400;700;900&family=Inter:wght@300;400;500;600;700&display=swap"
      rel="stylesheet"
    />
  </head>

  <body
    class="min-h-screen bg-sci-fi-dark text-white overflow-x-hidden scrollbar-sci-fi font-inter"
    {...props}
  >
    <!-- Animated background -->
    <div class="fixed inset-0 pointer-events-none">
      <div
        class="absolute inset-0 bg-gradient-radial from-cyan-400/30 via-transparent to-transparent animate-pulse"
      >
      </div>
      <div
        class="absolute inset-0 bg-gradient-radial from-purple-400/30 via-transparent to-transparent animate-pulse"
        style="animation-delay: 1s;"
      >
      </div>
      <div
        class="absolute inset-0 bg-gradient-radial from-pink-400/20 via-transparent to-transparent animate-pulse"
        style="animation-delay: 2s;"
      >
      </div>
    </div>

    <!-- Floating particles -->
    <div class="fixed inset-0 pointer-events-none">
      {
        Array.from({ length: 30 }).map((_, _i) => (
          <div
            class="absolute w-1 h-1 bg-cyan-400 rounded-full opacity-30 animate-bounce"
            style={`
						left: ${Math.random() * 100}%;
						top: ${Math.random() * 100}%;
						animation-delay: ${Math.random() * 3}s;
						animation-duration: ${2 + Math.random() * 2}s;
					`}
          />
        ))
      }
    </div>

    <!-- Header Navigation -->
    <Navigation navigation={navigation} />

    <!-- Main Content -->
    <main class="relative z-10">
      <slot />
    </main>

    <!-- Footer (conditional) -->
    {includeFooter && <Footer />}

    <script>
      // Add some interactive effects using pure DOM manipulation
      document.addEventListener('DOMContentLoaded', () => {
        // Add glow effect on interactive elements
        const interactiveElements = document.querySelectorAll(
          '.group, [data-interactive]'
        )
        interactiveElements.forEach(element => {
          element.addEventListener('mouseenter', () => {
            element.classList.add('glow-cyan')
          })

          element.addEventListener('mouseleave', () => {
            element.classList.remove('glow-cyan')
          })
        })

        // Add floating animation to particles
        const particles = document.querySelectorAll('.animate-bounce')
        particles.forEach((particle, index) => {
          if (index % 3 === 0) {
            particle.classList.add('animate-float')
          }
        })

        // Check if user just logged in and should be redirected to games
        const urlParams = new URLSearchParams(window.location.search)
        if (urlParams.get('redirect') === 'games') {
          // Smooth scroll to games section after a brief delay
          setTimeout(() => {
            const gamesSection = document.getElementById('games')
            if (gamesSection) {
              gamesSection.scrollIntoView({ behavior: 'smooth' })
            }
          }, 500)
        }
      })
    </script>
  </body>
</html>
